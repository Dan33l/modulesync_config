#!/usr/bin/env python3
import os
import json

# Note range is exclusive so the last number is not in the list
UNSUPPORTED_EL = {str(i) for i in range(3, 6)}
UNSUPPORTED = {
    'CentOS': UNSUPPORTED_EL,
    'Debian': {str(i) for i in range(3, 8)},
    'Fedora': {str(i) for i in range(3, 25)},
    'OracleLinux': UNSUPPORTED_EL,
    'RedHat': UNSUPPORTED_EL,
    'SLED': {'9', '10'},
    'SLES': {'9', '10'},
    'Scientific': UNSUPPORTED_EL,
    'Ubuntu': {str(i) + m for i in range(4, 17) for m in ('.04', '.10')} - {'14.04', '16.04'},
}

for mod in os.listdir('modules'):
    filename = os.path.join('modules', mod, 'metadata.json')

    print('Reading {}'.format(filename))

    with open(filename) as fp:
        metadata = json.load(fp)

    updated = False

    for operatingsystem in metadata.get('operatingsystem_support', []):
        releases = set(operatingsystem.get('operatingsystemrelease', []))
        for release in releases & UNSUPPORTED.get(operatingsystem['operatingsystem'], set()):
            print('Removing {}-{}'.format(operatingsystem['operatingsystem'], release))
            operatingsystem['operatingsystemrelease'].remove(release)
            updated = True

        if operatingsystem.get('operatingsystemrelease') == []:
            print('Removing {}'.format(operatingsystem['operatingsystem']))
            metadata['operatingsystem_support'].remove(operatingsystem)
            updated = True

    if updated:
        print('Writing {}'.format(filename))
        with open(filename, 'w') as fp:
            fp.write(json.dumps(metadata, indent=2) + "\n")
